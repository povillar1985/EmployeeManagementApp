@page "/employee/add"
@page "/employee/edit/{employeeId:int}"

@inject IEmployeeService EmployeeService
@inject IDepartmentService DepartmentService
@inject NavigationManager Navigation

<h3>Employee Add/Edit</h3>
<EditForm Model="Employee" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="col-8">
        <div>
            <label for="Department">Department</label>
            <InputSelect @bind-Value="Employee.DepartmentId">
                <option value=0>--Select Department--</option>
                @if (departments != null)
                {
                    foreach (var department in departments)
                    {
                        <option value=@department.Id>@department.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="(()=>Employee.DepartmentId)" />
        </div>
        <div class="row">
            <div class="col-6">
                <label for="FirstName">FirstName</label>
                <InputText @bind-Value="@Employee.FirstName" />
                <ValidationMessage For="(()=>Employee.FirstName)" />
            </div>
            <div class="col-6">
                <label for="LastName">LastName</label>
                <InputText @bind-Value="@Employee.LastName" />
            </div>
        </div>
        <div class="row">
            <div class="col-4">
                <label for="Email">Email</label>
                <InputText @bind-Value="@Employee.Email" />
            </div>
            <div class="col-4">
                <label for="Phone">Phone</label>
                <InputText @bind-Value="@Employee.Phone" />
            </div>
            <div class="col-4">
                <label for="Salary">Salary</label>
                <InputNumber @bind-Value="@Employee.Salary" />
            </div>
        </div>
        @*      <div class="row">
            <label for="Picture">Picture</label>
            <InputFile @bind-Value="@Employee.Picture" />
            </div>*@
        <div class="row">
            <label for="PhotoUrl">Photo</label>
            <Radzen.Blazor.RadzenUpload Accept="image/*" Url="api/Uploads/single" Complete="OnComplete" />
            <img src="@Employee.PhotoUrl" height="100" width="100" />
        </div>
        <div class="row">
            <label for="Bio">Bio</label>
            <InputTextArea @bind-Value="@Employee.Bio" />
        </div>
        <div class="row">
            <button type="submit">Submit</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int EmployeeId { get; set; }

    public Employee Employee { get; set; } = new();

    private IEnumerable<Department> departments;

    protected override async Task OnParametersSetAsync()
    {
        departments = await DepartmentService.GetAllAsync();

        if (EmployeeId > 0 && Employee?.Id == 0)
        {
            Employee = await EmployeeService.GetAsync(EmployeeId);
        }
    }

    private async Task OnValidSubmit()
    {
        if (EmployeeId > 0 && Employee.Id > 0)
        {
            //Update
            await EmployeeService.UpdateAsync(Employee);
        }
        else
        {
            //Insert
            Employee = await EmployeeService.AddAsync(Employee);
        }

        //redirect back to list
        Navigation.NavigateTo("/employees");
    }

    void OnComplete(UploadCompleteEventArgs args)
    {
        //Employee.PhotoUrl = args.RawResponse;
        Employee.PhotoUrl = "Photos/" + args.RawResponse;
    }
}
